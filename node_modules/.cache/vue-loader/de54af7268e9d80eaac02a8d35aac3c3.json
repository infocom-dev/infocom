{"remainingRequest":"/app/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/app/node_modules/cache-loader/dist/cjs.js??ref--0-0!/app/node_modules/vue-loader/lib/index.js??vue-loader-options!/app/src/components/v-question-item.vue?vue&type=template&id=898f57ba&","dependencies":[{"path":"/app/src/components/v-question-item.vue","mtime":1610372312782},{"path":"/app/node_modules/cache-loader/dist/cjs.js","mtime":1610126726712},{"path":"/app/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1610126728456},{"path":"/app/node_modules/cache-loader/dist/cjs.js","mtime":1610126726712},{"path":"/app/node_modules/vue-loader/lib/index.js","mtime":1610126728456}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}
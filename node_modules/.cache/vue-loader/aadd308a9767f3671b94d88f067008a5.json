{"remainingRequest":"/app/node_modules/vue-loader/lib/index.js??vue-loader-options!/app/src/components/RangeSlider.vue?vue&type=script&lang=js&","dependencies":[{"path":"/app/src/components/RangeSlider.vue","mtime":1610449934880},{"path":"/app/node_modules/cache-loader/dist/cjs.js","mtime":1610126726712},{"path":"/app/node_modules/babel-loader/lib/index.js","mtime":1610126726664},{"path":"/app/node_modules/cache-loader/dist/cjs.js","mtime":1610126726712},{"path":"/app/node_modules/vue-loader/lib/index.js","mtime":1610126728456}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICBwcm9wczogewogICAgdmFsdWU6IHsKICAgICAgdHlwZTogQXJyYXksCiAgICAgIGRlZmF1bHQ6IGZ1bmN0aW9uICgpIHsKICAgICAgICByZXR1cm4gWzAsIDEwMF07CiAgICAgIH0sCiAgICAgIHZhbGlkYXRvcjogZnVuY3Rpb24gKGFycmF5KSB7CiAgICAgICAgcmV0dXJuIGFycmF5Lmxlbmd0aCA9PSAyICYmIGFycmF5WzBdID49IDAgJiYgYXJyYXlbMV0gPD0gMTAwOwogICAgICB9LAogICAgfSwKICB9LAogIGRhdGE6IGZ1bmN0aW9uICgpIHsKICAgIHJldHVybiB7IGlzRHJhZ2VkOiAwIH07CiAgfSwKICBtb3VudGVkKCkgewogICAgdmFyIHNlbGYgPSB0aGlzOwogICAgdmFyIHJhbmdlID0gdGhpcy4kZWwsCiAgICAgIGNpcmNsZXMgPSByYW5nZS5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCJjaXJjbGUiKSwKICAgICAgZmlsbGVkID0gcmFuZ2UuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgiZmlsbGVkIilbMF0sCiAgICAgIGJhciA9IHJhbmdlLmdldEVsZW1lbnRzQnlDbGFzc05hbWUoImJhciIpWzBdOwogICAgYmFyLm9uY2xpY2sgPSBmdW5jdGlvbiAobW92ZSkgewogICAgICB2YXIgaSA9ICsoTWF0aC5hYnMobW92ZS5vZmZzZXRYIC0gY2lyY2xlc1swXS5vZmZzZXRMZWZ0KSA+IE1hdGguYWJzKG1vdmUub2Zmc2V0WCAtIGNpcmNsZXNbMV0ub2Zmc2V0TGVmdCkpOwogICAgICBtb3ZlVG8oaSwgbW92ZS5jbGllbnRYKTsKICAgIH07CiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGNpcmNsZXMubGVuZ3RoOyBpKyspIHsKICAgICAgY2lyY2xlc1tpXS5vbnRvdWNobW92ZSA9IGZ1bmN0aW9uIChwYXJhbXMpIHsKICAgICAgICBzZWxmLmlzRHJhZ2VkID0gaSArIDE7CiAgICAgICAgbW92ZVRvKGksIHBhcmFtcy50b3VjaGVzWzBdLmNsaWVudFgpOwogICAgICB9OwogICAgICBjaXJjbGVzW2ldLm9udG91Y2hlbmQgPSBmdW5jdGlvbiAoKSB7CiAgICAgICAgc2VsZi5pc0RyYWdlZCA9IDA7CiAgICAgIH07CiAgICAgIGNpcmNsZXNbaV0ub25tb3VzZWRvd24gPSBmdW5jdGlvbiAoZSkgewogICAgICAgIHNlbGYuaXNEcmFnZWQgPSBpICsgMTsKICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7CiAgICAgICAgcmFuZ2Uub25tb3VzZW1vdmUgPSBmdW5jdGlvbiAobW92ZSkgewogICAgICAgICAgbW92ZVRvKGksIG1vdmUuY2xpZW50WCk7CiAgICAgICAgfTsKICAgICAgfTsKICAgIH0KICAgIHJhbmdlLm9ubW91c2VsZWF2ZSA9IHJhbmdlLm9ubW91c2V1cCA9IGZ1bmN0aW9uICgpIHsKICAgICAgc2VsZi5pc0RyYWdlZCA9IDA7CiAgICAgIHJhbmdlLm9ubW91c2Vtb3ZlID0gbnVsbDsKICAgIH07CiAgICBmaWxsZWQuc3R5bGUubGVmdCA9IGNpcmNsZXNbMF0uc3R5bGUubGVmdCA9IHRoaXMudmFsdWVbMF0gKyAiJSI7CiAgICBmaWxsZWQuc3R5bGUud2lkdGggPSBjaXJjbGVzWzFdLnN0eWxlLmxlZnQgPSB0aGlzLnZhbHVlWzFdICsgIiUiOwogICAgdGhpcy4kZW1pdCgicmVhZHkiKTsKICAgIGZ1bmN0aW9uIG1vdmVUbyhpbmRleCwgeCkgewogICAgICB2YXIgcHhQZXJQZXJjZW50ID0gYmFyLm9mZnNldFdpZHRoIC8gMTAwOwogICAgICB2YXIgbWluV2lkdGhCZXR3ZWVuQ2lyY2xlc1BlcmNlbnRzID0gY2lyY2xlc1swXS5vZmZzZXRXaWR0aCAvIHB4UGVyUGVyY2VudDsKICAgICAgdmFyIHN0ZXAgPSAod2luZG93LnNjcm9sbFggKyB4IC0gcmFuZ2Uub2Zmc2V0TGVmdCAtIGJhci5vZmZzZXRMZWZ0KSAvIHB4UGVyUGVyY2VudDsKICAgICAgdmFyIGJldHdlZW5DaXJjbGVzID0gaW5kZXggPyBzdGVwIC0gc2VsZi52YWx1ZVswXSA6IHNlbGYudmFsdWVbMV0gLSBzdGVwOwogICAgICBpZiAoYmV0d2VlbkNpcmNsZXMgPCBtaW5XaWR0aEJldHdlZW5DaXJjbGVzUGVyY2VudHMpIHJldHVybjsKICAgICAgaWYgKHN0ZXAgPCAwKSBzdGVwID0gMDsKICAgICAgZWxzZSBpZiAoc3RlcCA+IDEwMCkgc3RlcCA9IDEwMDsKICAgICAgc2VsZi52YWx1ZVtpbmRleF0gPSBzdGVwOwogICAgICBjaXJjbGVzW2luZGV4XS5zdHlsZS5sZWZ0ID0gc3RlcCArICIlIjsKICAgICAgZmlsbGVkLnN0eWxlLmxlZnQgPSBjaXJjbGVzWzBdLnN0eWxlLmxlZnQ7CiAgICAgIGZpbGxlZC5zdHlsZS53aWR0aCA9IHNlbGYudmFsdWVbMV0gLSBzZWxmLnZhbHVlWzBdICsgIiUiOwogICAgICBzZWxmLiRlbWl0KCJjaGFuZ2UiLCB7IGZyb206IHNlbGYudmFsdWVbMF0sIHRvOiBzZWxmLnZhbHVlWzFdIH0pOwogICAgfQogIH0sCn07Cg=="},{"version":3,"sources":["RangeSlider.vue"],"names":[],"mappings":";;;;;;;;;;;;;;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"RangeSlider.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"range\">\n    <div class=\"bar\">\n      <div class=\"filled\"></div>\n      <div class=\"circle\">\n        <div :class=\"{ t: true, 'circle-drag': isDraged == 1 }\"></div>\n      </div>\n      <div class=\"circle\">\n        <div :class=\"{ t: true, 'circle-drag': isDraged == 2 }\"></div>\n      </div>\n    </div>\n  </div>\n</template>\n<script type=\"text/javascript\">\nexport default {\n  props: {\n    value: {\n      type: Array,\n      default: function () {\n        return [0, 100];\n      },\n      validator: function (array) {\n        return array.length == 2 && array[0] >= 0 && array[1] <= 100;\n      },\n    },\n  },\n  data: function () {\n    return { isDraged: 0 };\n  },\n  mounted() {\n    var self = this;\n    var range = this.$el,\n      circles = range.getElementsByClassName(\"circle\"),\n      filled = range.getElementsByClassName(\"filled\")[0],\n      bar = range.getElementsByClassName(\"bar\")[0];\n    bar.onclick = function (move) {\n      var i = +(Math.abs(move.offsetX - circles[0].offsetLeft) > Math.abs(move.offsetX - circles[1].offsetLeft));\n      moveTo(i, move.clientX);\n    };\n    for (let i = 0; i < circles.length; i++) {\n      circles[i].ontouchmove = function (params) {\n        self.isDraged = i + 1;\n        moveTo(i, params.touches[0].clientX);\n      };\n      circles[i].ontouchend = function () {\n        self.isDraged = 0;\n      };\n      circles[i].onmousedown = function (e) {\n        self.isDraged = i + 1;\n        e.preventDefault();\n        range.onmousemove = function (move) {\n          moveTo(i, move.clientX);\n        };\n      };\n    }\n    range.onmouseleave = range.onmouseup = function () {\n      self.isDraged = 0;\n      range.onmousemove = null;\n    };\n    filled.style.left = circles[0].style.left = this.value[0] + \"%\";\n    filled.style.width = circles[1].style.left = this.value[1] + \"%\";\n    this.$emit(\"ready\");\n    function moveTo(index, x) {\n      var pxPerPercent = bar.offsetWidth / 100;\n      var minWidthBetweenCirclesPercents = circles[0].offsetWidth / pxPerPercent;\n      var step = (window.scrollX + x - range.offsetLeft - bar.offsetLeft) / pxPerPercent;\n      var betweenCircles = index ? step - self.value[0] : self.value[1] - step;\n      if (betweenCircles < minWidthBetweenCirclesPercents) return;\n      if (step < 0) step = 0;\n      else if (step > 100) step = 100;\n      self.value[index] = step;\n      circles[index].style.left = step + \"%\";\n      filled.style.left = circles[0].style.left;\n      filled.style.width = self.value[1] - self.value[0] + \"%\";\n      self.$emit(\"change\", { from: self.value[0], to: self.value[1] });\n    }\n  },\n};\n</script>\n\n<style scoped>\n.range {\n  padding: 1px 0;\n}\n.bar,\n.filled {\n  position: relative;\n}\n.bar {\n  transition: all 0.25s;\n  margin: 1.2em;\n  border-radius: 0.3em;\n  background-color: whitesmoke;\n  box-shadow: 0 0 0.2em;\n}\n.filled {\n  height: 0.6em;\n  background-color: lightslategray;\n}\n.circle {\n  position: absolute;\n  margin-top: -1.3em;\n  margin-left: -1em;\n  width: 2em;\n  height: 2em;\n  border-radius: 50%;\n  background-color: #fff;\n  box-shadow: 0 0 0.5rem #868686;\n}\n.circle:hover {\n  background-color: #f5f5f5;\n}\n.t {\n  transition: all 0.25s;\n  position: absolute;\n  top: -0.5em;\n  left: -0.5em;\n  border-radius: 50%;\n  background: radial-gradient(#008cff34 50%, rgb(0, 101, 253));\n  width: 3em;\n  height: 3em;\n  transform: scale(0);\n  z-index: -1;\n}\n.circle-drag {\n  transform: scale(1);\n}\n</style>"]}]}
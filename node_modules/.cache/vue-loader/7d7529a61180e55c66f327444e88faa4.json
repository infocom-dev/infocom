{"remainingRequest":"/app/node_modules/vue-loader/lib/index.js??vue-loader-options!/app/src/components/RangeSliderComponent.vue?vue&type=script&lang=js&","dependencies":[{"path":"/app/src/components/RangeSliderComponent.vue","mtime":1610448048953},{"path":"/app/node_modules/cache-loader/dist/cjs.js","mtime":1610126726712},{"path":"/app/node_modules/babel-loader/lib/index.js","mtime":1610126726664},{"path":"/app/node_modules/cache-loader/dist/cjs.js","mtime":1610126726712},{"path":"/app/node_modules/vue-loader/lib/index.js","mtime":1610126728456}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICAgIG5hbWU6ICdSYW5nZVNsaWRlckNvbXBvbmVudCcsCiAgICBwcm9wczogewogICAgICAgIG1pbjogTnVtYmVyLAogICAgICAgIG1heDogTnVtYmVyLAogICAgICAgIHN0ZXA6IE51bWJlciwKICAgICAgICBkZWNpbWFsczogTnVtYmVyLAogICAgICAgIGRlZmF1bHQ6IE51bWJlciwKICAgICAgICBpc1N0ZXBzVmlzaWJsZTogewogICAgICAgICAgICB0eXBlOiBCb29sZWFuLAogICAgICAgICAgICBkZWZhdWx0OiBmYWxzZQogICAgICAgIH0sCiAgICAgICAgdHlwZTogewogICAgICAgICAgICB0eXBlOiBTdHJpbmcsCiAgICAgICAgICAgIGRlZmF1bHQ6ICdzdGVwJwogICAgICAgIH0KICAgIH0sCiAgICBkYXRhKCkgewogICAgICAgIHJldHVybiB7CiAgICAgICAgICAgIHN0ZXBzOiB0aGlzLmdldFN0ZXBzTnVtYmVyKCksCiAgICAgICAgICAgIGlzRHJhZ2dpbmc6IGZhbHNlLAogICAgICAgICAgICBvbk1vdXNlRG93blBvc2l0aW9uOiAwLAogICAgICAgICAgICBvbk1vdXNlVXBQb3NpdGlvbjogMCwKICAgICAgICAgICAgaGFuZGxlUG9zaXRpb246IHRoaXMuZGVmYXVsdCA/IHRoaXMuZ2V0RGVmYXVsdCgpIDogMCwKICAgICAgICAgICAgYmFyV2lkdGg6IDAsCiAgICAgICAgICAgIGlzT3V0T2ZCb3VuZHM6IGZhbHNlCiAgICAgICAgfQogICAgfSwKICAgIG1ldGhvZHM6IHsKICAgICAgICBvbkJhckNsaWNrKGUpIHsKICAgICAgICAgICAgaWYgKCF0aGlzLmlzRHJhZ2dpbmcpIHsKICAgICAgICAgICAgICAgIGNvbnN0IHBvc2l0aW9uID0gKChlLmNsaWVudFggLSB0aGlzLiRlbC5vZmZzZXRMZWZ0KSAvIHRoaXMuYmFyV2lkdGgpICogMTAwOwogICAgICAgICAgICAgICAgdGhpcy5zZXRIYW5kbGVQb3NpdGlvbihwb3NpdGlvbik7CiAgICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIHNldEhhbmRsZVBvc2l0aW9uKHBvc2l0aW9uKSB7CiAgICAgICAgICAgIHRoaXMuaGFuZGxlUG9zaXRpb24gPSB0aGlzLmhhbmRsZVBvc2l0aW9uID0gdGhpcy5udW1iZXJPZlN0ZXBzLnNvcnQoKGEsIGIpID0+IHsKICAgICAgICAgICAgICAgIHJldHVybiBNYXRoLmFicyhhIC0gcG9zaXRpb24pIC0gTWF0aC5hYnMoYiAtIHBvc2l0aW9uKTsKICAgICAgICAgICAgfSlbMF07CiAgICAgICAgfSwKICAgICAgICBnZXRTdGVwc051bWJlcigpIHsKICAgICAgICAgICAgcmV0dXJuIE1hdGguY2VpbCgodGhpcy5tYXggLSB0aGlzLm1pbikgLyB0aGlzLnN0ZXApOwogICAgICAgIH0sCiAgICAgICAgZ2V0RGVmYXVsdCgpIHsKICAgICAgICAgICAgaWYgKHRoaXMuZGVmYXVsdCA8IHRoaXMubWluKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gMDsKICAgICAgICAgICAgfSBlbHNlIGlmICh0aGlzLmRlZmF1bHQgPiB0aGlzLm1heCkgewogICAgICAgICAgICAgICAgcmV0dXJuIDEwMDsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIHJldHVybiAoKHRoaXMuZGVmYXVsdCAtIHRoaXMubWluKSAvIHRoaXMuc3RlcCAvIHRoaXMuZ2V0U3RlcHNOdW1iZXIoKSkgKiAxMDA7CiAgICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIHZhbGlkYXRlRm9yQm91bmRhcmllcyh2YWx1ZSkgewogICAgICAgICAgICBpZiAodmFsdWUgPj0gMTAwKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gMTAwOwogICAgICAgICAgICB9IGVsc2UgaWYgKHZhbHVlIDw9IDApIHsKICAgICAgICAgICAgICAgIHJldHVybiAwOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgcmV0dXJuIHZhbHVlOwogICAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICBvbk1vdXNlRG93bkhhbmRsZXIoZSkgewogICAgICAgICAgICB0aGlzLmlzRHJhZ2dpbmcgPSB0cnVlOwogICAgICAgICAgICBjb25zdCB7aGFuZGxlfSA9IHRoaXMuJHJlZnM7CiAgICAgICAgICAgIHRoaXMub25Nb3VzZURvd25Qb3NpdGlvbiA9IGUuY2xpZW50WCAtIGhhbmRsZS5vZmZzZXRMZWZ0CiAgICAgICAgfSwKICAgICAgICBvbk1vdXNlVXBIYW5kbGVyKCkgewogICAgICAgICAgICB0aGlzLmlzRHJhZ2dpbmcgPSBmYWxzZTsKICAgICAgICB9LAogICAgICAgIG9uTW91c2VNb3ZlSGFuZGxlcihlKSB7CiAgICAgICAgICAgIGlmICghdGhpcy5pc0RyYWdnaW5nKSB7CiAgICAgICAgICAgICAgICByZXR1cm47CiAgICAgICAgICAgIH0KICAgICAgICAgICAgY29uc3QgcG9zaXRpb24gPSAoKGUuY2xpZW50WCAtIHRoaXMub25Nb3VzZURvd25Qb3NpdGlvbikgLyB0aGlzLmJhcldpZHRoKSAqIDEwMDsKICAgICAgICAgICAgaWYgKHRoaXMudHlwZSA9PT0gJ3Ntb290aCcpIHsKICAgICAgICAgICAgICAgIC8vc21vb3RoCiAgICAgICAgICAgICAgICB0aGlzLmhhbmRsZVBvc2l0aW9uID0gdGhpcy52YWxpZGF0ZUZvckJvdW5kYXJpZXMocG9zaXRpb24pOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgLy8gc3RlcAogICAgICAgICAgICAgICAgdGhpcy5zZXRIYW5kbGVQb3NpdGlvbihwb3NpdGlvbik7CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICB9LAogICAgY29tcHV0ZWQ6IHsKICAgICAgICBoYW5kbGVTdHlsZXMoKSB7CiAgICAgICAgICAgIHJldHVybiB7CiAgICAgICAgICAgICAgICBsZWZ0OiBgJHt0aGlzLmhhbmRsZVBvc2l0aW9ufSVgCiAgICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIHByb2dyZXNzQmFyU3R5bGVzKCkgewogICAgICAgICAgICByZXR1cm4gewogICAgICAgICAgICAgICAgd2lkdGg6IGAke3RoaXMuaGFuZGxlUG9zaXRpb259JWAKICAgICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgY3VycmVudFZhbHVlKCkgewogICAgICAgICAgICByZXR1cm4gKCgodGhpcy5tYXggLSB0aGlzLm1pbikgLyAxMDApICogdGhpcy5oYW5kbGVQb3NpdGlvbiArIHRoaXMubWluKS50b0ZpeGVkKHRoaXMuZGVjaW1hbHMgfHwgMCk7CiAgICAgICAgfSwKICAgICAgICBudW1iZXJPZlN0ZXBzKCkgewogICAgICAgICAgICBjb25zdCByZXN1bHQgPSBbXTsKICAgICAgICAgICAgbGV0IGk7CiAgICAgICAgICAgIGZvciAoaSA9IDA7IGkgPCB0aGlzLnN0ZXBzICsgMTsgaSsrKSB7CiAgICAgICAgICAgICAgICByZXN1bHQucHVzaChpIC8gdGhpcy5zdGVwcyAqIDEwMCk7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgcmV0dXJuIHJlc3VsdC5zb3J0KChhLCBiKSA9PiAoYSAtIGIpKTsKICAgICAgICB9CiAgICB9LAogICAgbW91bnRlZCgpIHsKICAgICAgICB0aGlzLmJhcldpZHRoID0gdGhpcy4kcmVmcy5iYXIuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkud2lkdGg7CiAgICB9LAogICAgd2F0Y2g6IHsKICAgICAgICBjdXJyZW50VmFsdWU6IHsKICAgICAgICAgICAgaW1tZWRpYXRlOiBmYWxzZSwKICAgICAgICAgICAgaGFuZGxlcihuZXdWYWx1ZSkgewogICAgICAgICAgICAgICAgdGhpcy4kZW1pdCgnb25WYWx1ZUNoYW5nZScsIG5ld1ZhbHVlKTsKICAgICAgICAgICAgfQogICAgICAgIH0KICAgIH0KfQo="},{"version":3,"sources":["RangeSliderComponent.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkfile":"RangeSliderComponent.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div>\n        <div @click=\"onBarClick\"\n             class=\"range-slider-component\">\n\n            <div class=\"bar\"\n                 ref=\"bar\">\n                <span class=\"min\">{{min}}</span>\n                <template v-if=\"isStepsVisible\">\n                    <template v-for=\"step in numberOfSteps\">\n                        <span :class=\"{'is-selected': handlePosition > step}\" :key=\"step\" :style=\"{left: `${step}%`}\"\n                              class=\"checkpoint\">|</span>\n                    </template>\n                </template>\n                <button\n                        :style=\"handleStyles\"\n                        @mousedown=\"onMouseDownHandler\"\n                        class=\"handle\"\n                        ref=\"handle\"\n                        type=\"button\">\n                </button>\n                <span class=\"max\">{{max}}</span>\n                <div :style=\"progressBarStyles\" class=\"progress-bar\"></div>\n            </div>\n\n        </div>\n        <div class=\"result\">\n            currentValue: {{currentValue}}\n        </div>\n    </div>\n</template>\n\n\n<script>\n    export default {\n        name: 'RangeSliderComponent',\n        props: {\n            min: Number,\n            max: Number,\n            step: Number,\n            decimals: Number,\n            default: Number,\n            isStepsVisible: {\n                type: Boolean,\n                default: false\n            },\n            type: {\n                type: String,\n                default: 'step'\n            }\n        },\n        data() {\n            return {\n                steps: this.getStepsNumber(),\n                isDragging: false,\n                onMouseDownPosition: 0,\n                onMouseUpPosition: 0,\n                handlePosition: this.default ? this.getDefault() : 0,\n                barWidth: 0,\n                isOutOfBounds: false\n            }\n        },\n        methods: {\n            onBarClick(e) {\n                if (!this.isDragging) {\n                    const position = ((e.clientX - this.$el.offsetLeft) / this.barWidth) * 100;\n                    this.setHandlePosition(position);\n                }\n            },\n            setHandlePosition(position) {\n                this.handlePosition = this.handlePosition = this.numberOfSteps.sort((a, b) => {\n                    return Math.abs(a - position) - Math.abs(b - position);\n                })[0];\n            },\n            getStepsNumber() {\n                return Math.ceil((this.max - this.min) / this.step);\n            },\n            getDefault() {\n                if (this.default < this.min) {\n                    return 0;\n                } else if (this.default > this.max) {\n                    return 100;\n                } else {\n                    return ((this.default - this.min) / this.step / this.getStepsNumber()) * 100;\n                }\n            },\n            validateForBoundaries(value) {\n                if (value >= 100) {\n                    return 100;\n                } else if (value <= 0) {\n                    return 0;\n                } else {\n                    return value;\n                }\n            },\n            onMouseDownHandler(e) {\n                this.isDragging = true;\n                const {handle} = this.$refs;\n                this.onMouseDownPosition = e.clientX - handle.offsetLeft\n            },\n            onMouseUpHandler() {\n                this.isDragging = false;\n            },\n            onMouseMoveHandler(e) {\n                if (!this.isDragging) {\n                    return;\n                }\n                const position = ((e.clientX - this.onMouseDownPosition) / this.barWidth) * 100;\n                if (this.type === 'smooth') {\n                    //smooth\n                    this.handlePosition = this.validateForBoundaries(position);\n                } else {\n                    // step\n                    this.setHandlePosition(position);\n                }\n            }\n        },\n        computed: {\n            handleStyles() {\n                return {\n                    left: `${this.handlePosition}%`\n                }\n            },\n            progressBarStyles() {\n                return {\n                    width: `${this.handlePosition}%`\n                }\n            },\n            currentValue() {\n                return (((this.max - this.min) / 100) * this.handlePosition + this.min).toFixed(this.decimals || 0);\n            },\n            numberOfSteps() {\n                const result = [];\n                let i;\n                for (i = 0; i < this.steps + 1; i++) {\n                    result.push(i / this.steps * 100);\n                }\n                return result.sort((a, b) => (a - b));\n            }\n        },\n        mounted() {\n            this.barWidth = this.$refs.bar.getBoundingClientRect().width;\n        },\n        watch: {\n            currentValue: {\n                immediate: false,\n                handler(newValue) {\n                    this.$emit('onValueChange', newValue);\n                }\n            }\n        }\n    }\n</script>\n\n<style lang=\"scss\">\n    .range-slider-component {\n        height: 30px;\n        position: relative;\n        .min {\n            position: absolute;\n            left: 0;\n            top: 20px;\n        }\n        .max {\n            position: absolute;\n            right: 0;\n            top: 20px;\n        }\n        .bar,\n        .progress-bar {\n            height: 2px;\n            width: 100%;\n            background-color: #ccc;\n            position: absolute;\n            top: 50%;\n            transform: translateY(-50%);\n            z-index: 1;\n        }\n        .progress-bar {\n            width: 0;\n            background-color: green;\n            z-index: 2;\n        }\n        .handle {\n            position: absolute;\n            top: 50%;\n            transform: translate(-50%, -50%);\n            width: 20px;\n            height: 20px;\n            z-index: 10;\n            overflow: hidden;\n            backface-visibility: hidden;\n            margin: 0;\n        }\n        .checkpoint {\n            position: absolute;\n            top: 50%;\n            transform: translateY(-50%);\n            user-select: none;\n            display: block;\n            white-space: nowrap;\n            font-size: 0;\n            color: transparent;\n            width: 2px;\n            height: 15px;\n            background-color: #ccc;\n            &.is-selected {\n                background-color: green;\n            }\n        }\n        .result {\n            text-align: center;\n        }\n    }\n</style>"]}]}
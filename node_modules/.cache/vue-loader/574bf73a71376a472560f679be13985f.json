{"remainingRequest":"/app/node_modules/vue-loader/lib/index.js??vue-loader-options!/app/src/components/VueDoubleRange.vue?vue&type=script&lang=js&","dependencies":[{"path":"/app/src/components/VueDoubleRange.vue","mtime":1610372214876},{"path":"/app/node_modules/cache-loader/dist/cjs.js","mtime":1610126726712},{"path":"/app/node_modules/babel-loader/lib/index.js","mtime":1610126726664},{"path":"/app/node_modules/cache-loader/dist/cjs.js","mtime":1610126726712},{"path":"/app/node_modules/vue-loader/lib/index.js","mtime":1610126728456}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnVnVlRG91YmxlUmFuZ2UnLAogIHByb3BzOiB7CiAgICB2YWx1ZTogT2JqZWN0LAogICAgbWluOiBOdW1iZXIsCiAgICBtYXg6IE51bWJlciwKICAgIHN0ZXA6IE51bWJlcgogIH0sCiAgZGF0YSAoKSB7CiAgICByZXR1cm4gewogICAgICBpc01vdXNlRG93bjogZmFsc2UsCiAgICAgIG1vdmVkSXRlbTogbnVsbCwKICAgICAgdG1wVmFsdWU6IHsKICAgICAgICBmcm9tOiAwLAogICAgICAgIGhhbGZGcm9tOiAwLAogICAgICAgIHRvOiAwLAogICAgICAgIGhhbGZUbzogMAogICAgICB9LAogICAgICB3aWR0aDogewogICAgICAgIGNvbnRhaW5lcjogMCwKICAgICAgICBzdGVwOiAwLAogICAgICAgIGhhbGZTdGVwOiAwCiAgICAgIH0sCiAgICAgIG1vdXNlOiB7CiAgICAgICAgc3RhcnRYOiAwCiAgICAgIH0KICAgIH0KICB9LAogIG1vdW50ZWQgKCkgewogICAgLy8gY2hlY2sgYXZhaWxhYmxlIHNsaWRlciBib3VuZGVkCiAgICBpZiAodGhpcy5zdGVwIDw9IDApIHsKICAgICAgdGhpcy5zdGVwID0gMTsKICAgIH0KICAgIGxldCB2YWx1ZSA9IHRoaXMudmFsdWU7CiAgICBpZiAodmFsdWUuZnJvbSA8IHRoaXMubWluKSB7CiAgICAgIHRoaXMuJGVtaXQoJ2lucHV0JywgeyBmcm9tOiB0aGlzLm1pbiwgdG86IHZhbHVlLnRvIH0pOwogICAgfQogICAgaWYgKHZhbHVlLnRvID4gdGhpcy5tYXgpIHsKICAgICAgdGhpcy4kZW1pdCgnaW5wdXQnLCB7IGZyb206IHZhbHVlLmZyb20sIHRvOiB0aGlzLm1heCB9KTsKICAgIH0KICAgIGlmICh2YWx1ZS5mcm9tID4gdmFsdWUudG8pIHsKICAgICAgdGhpcy4kZW1pdCgnaW5wdXQnLCB7IGZyb206IHRoaXMubWluLCB0bzogdGhpcy5tYXggfSk7CiAgICB9CiAgICAvLyBhZGQgZXZlbnRzCiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigncmVzaXplJywgdGhpcy5vbldpbmRvd1Jlc2l6ZSk7CiAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdtb3VzZXVwJywgdGhpcy5vbk1vdXNlVXApOwogICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignbW91c2Vtb3ZlJywgdGhpcy5vbk1vdXNlTW92ZSk7CiAgICAvLyBpbml0IHdpZHRoIGRhdGEKICAgIHRoaXMub25XaW5kb3dSZXNpemUoKTsKICB9LAogIGJlZm9yZURlc3Ryb3kgKCkgewogICAgLy8gcmVtb3ZlIGFkZGVkIGV2ZW50cwogICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3Jlc2l6ZScsIHRoaXMub25XaW5kb3dSZXNpemUpOwogICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcignbW91c2V1cCcsIHRoaXMub25Nb3VzZVVwKTsKICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ21vdXNlbW92ZScsIHRoaXMub25Nb3VzZU1vdmUpOwogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIGlubmVyICgpIHsKICAgICAgbGV0IHsgZnJvbSwgdG8gfSA9IHRoaXMuZ2V0VmFsdWUoKTsKICAgICAgbGV0IGxlZnQgPSB0aGlzLndpZHRoLnN0ZXAgKiAoKGZyb20gLSB0aGlzLm1pbikgLyB0aGlzLnN0ZXApOwogICAgICBsZXQgd2lkdGggPSAodGhpcy53aWR0aC5zdGVwICogKCh0byAtIHRoaXMubWluKSAvIHRoaXMuc3RlcCkpIC0gbGVmdDsKICAgICAgcmV0dXJuIHsKICAgICAgICBsZWZ0LAogICAgICAgIHdpZHRoCiAgICAgIH07CiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICBnZXRWYWx1ZSAoKSB7CiAgICAgIHJldHVybiB7CiAgICAgICAgZnJvbTogKE51bWJlcih0aGlzLnZhbHVlLmZyb20pICsgdGhpcy50bXBWYWx1ZS5mcm9tICsgdGhpcy50bXBWYWx1ZS5oYWxmRnJvbSkgfHwgdGhpcy5taW4sCiAgICAgICAgdG86IChOdW1iZXIodGhpcy52YWx1ZS50bykgKyB0aGlzLnRtcFZhbHVlLnRvICsgdGhpcy50bXBWYWx1ZS5oYWxmVG8pIHx8IHRoaXMubWF4CiAgICAgIH0KICAgIH0sCiAgICBvbldpbmRvd1Jlc2l6ZSAoKSB7CiAgICAgIHRoaXMud2lkdGguY29udGFpbmVyID0gdGhpcy4kcmVmcy5jb250YWluZXIub2Zmc2V0V2lkdGg7CiAgICAgIHRoaXMud2lkdGguc3RlcCA9ICh0aGlzLndpZHRoLmNvbnRhaW5lciAvICh0aGlzLm1heCAtIHRoaXMubWluKSkgKiB0aGlzLnN0ZXA7CiAgICAgIHRoaXMud2lkdGguaGFsZlN0ZXAgPSB0aGlzLndpZHRoLnN0ZXAgLyAyOwogICAgfSwKICAgIG9uTW91c2VEb3duIChldmVudCkgewogICAgICAvLyBjaGVjayBpcyBwcmV2aW91c2x5IG1vdXNlIG5vdCBwcmVzc2VkIGRvd24KICAgICAgaWYgKHRoaXMuaXNNb3VzZURvd24pIHJldHVybjsKICAgICAgLy8gZ2V0IGluZm8gZnJvbSBuZXcgbW91c2UgZG93biBldmVudAogICAgICB0aGlzLm1vdmVkSXRlbSA9IGV2ZW50LnRhcmdldC5nZXRBdHRyaWJ1dGUoJ25hbWUnKTsKICAgICAgdGhpcy5tb3VzZS5zdGFydFggPSBldmVudC5jbGllbnRYOwogICAgICBzd2l0Y2ggKHRoaXMubW92ZWRJdGVtKSB7CiAgICAgICAgY2FzZSAnc2xpZGVyJzoKICAgICAgICAgIHRoaXMuJHJlZnMuc2xpZGVyLmNsYXNzTGlzdC5hZGQoJ3NsaWRlci0tZ3JhYmJpbmcnKTsKICAgICAgICAgIGJyZWFrOwogICAgICAgIGNhc2UgJ2xlZnQnOgogICAgICAgICAgdGhpcy4kcmVmcy5yaWdodC5zdHlsZS56SW5kZXggPSAxOwogICAgICAgICAgdGhpcy4kcmVmcy5sZWZ0LnN0eWxlLnpJbmRleCA9IDI7CiAgICAgICAgICBicmVhazsKICAgICAgICBjYXNlICdyaWdodCc6CiAgICAgICAgICB0aGlzLiRyZWZzLmxlZnQuc3R5bGUuekluZGV4ID0gMTsKICAgICAgICAgIHRoaXMuJHJlZnMucmlnaHQuc3R5bGUuekluZGV4ID0gMjsKICAgICAgICAgIGJyZWFrOwogICAgICB9CiAgICAgIHRoaXMuaXNNb3VzZURvd24gPSB0cnVlOwogICAgfSwKICAgIG9uTW91c2VNb3ZlIChldmVudCkgewogICAgICAvLyBjaGVjayBpcyBwcmV2aW91c2x5IG1vdXNlIHByZXNzZWQgZG93bgogICAgICBpZiAodGhpcy5pc01vdXNlRG93bikgewogICAgICAgIGxldCBjbGllbnRYID0gZXZlbnQuY2xpZW50WDsKICAgICAgICBsZXQgZGVsdGEgPSB0aGlzLm1vdXNlLnN0YXJ0WCAtIGNsaWVudFg7CiAgICAgICAgLy8gZ2V0IG5ldyB2YWx1ZSBwYXJ0cyBmcm9tIGRlbHRhCiAgICAgICAgbGV0IHBhcnRzLCBoYWxmUGFydDsKICAgICAgICBpZiAoZGVsdGEgPiAwKSB7CiAgICAgICAgICBwYXJ0cyA9IE1hdGguZmxvb3IoZGVsdGEgLyB0aGlzLndpZHRoLnN0ZXApOwogICAgICAgICAgaGFsZlBhcnQgPSBNYXRoLmZsb29yKChkZWx0YSAtIChwYXJ0cyAqIHRoaXMud2lkdGguc3RlcCkpIC8gdGhpcy53aWR0aC5oYWxmU3RlcCk7CiAgICAgICAgICBwYXJ0cyA9IC0ocGFydHMgKiB0aGlzLnN0ZXApOwogICAgICAgICAgaGFsZlBhcnQgPSAtKGhhbGZQYXJ0ICogdGhpcy5zdGVwKTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgZGVsdGEgPSAtZGVsdGE7CiAgICAgICAgICBwYXJ0cyA9IE1hdGguZmxvb3IoZGVsdGEgLyB0aGlzLndpZHRoLnN0ZXApOwogICAgICAgICAgaGFsZlBhcnQgPSBNYXRoLmZsb29yKChkZWx0YSAtIChwYXJ0cyAqIHRoaXMud2lkdGguc3RlcCkpIC8gdGhpcy53aWR0aC5oYWxmU3RlcCk7CiAgICAgICAgICBwYXJ0cyA9IHBhcnRzICogdGhpcy5zdGVwOwogICAgICAgICAgaGFsZlBhcnQgPSBoYWxmUGFydCAqIHRoaXMuc3RlcDsKICAgICAgICB9CiAgICAgICAgbGV0IHZhbHVlRnJvbSA9IE51bWJlcih0aGlzLnZhbHVlLmZyb20pOwogICAgICAgIGxldCB2YWx1ZVRvID0gTnVtYmVyKHRoaXMudmFsdWUudG8pOwogICAgICAgIHN3aXRjaCAodGhpcy5tb3ZlZEl0ZW0pIHsKICAgICAgICAgIGNhc2UgJ2xlZnQnOiB7CiAgICAgICAgICAgIC8vIGNoZWNrIGJvdW5kcwogICAgICAgICAgICBsZXQgdG1wVmFsdWVGcm9tID0gdmFsdWVGcm9tICsgcGFydHMgKyBoYWxmUGFydDsKICAgICAgICAgICAgaWYgKHRtcFZhbHVlRnJvbSA8IHRoaXMubWluKSB7CiAgICAgICAgICAgICAgcGFydHMgPSB0aGlzLm1pbiAtIHZhbHVlRnJvbTsKICAgICAgICAgICAgICBoYWxmUGFydCA9IDA7CiAgICAgICAgICAgIH0gZWxzZSBpZiAodG1wVmFsdWVGcm9tID4gdmFsdWVUbykgewogICAgICAgICAgICAgIHBhcnRzID0gdmFsdWVUbyAtIHZhbHVlRnJvbTsKICAgICAgICAgICAgICBoYWxmUGFydCA9IDA7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgLy8gc2V0IG5ldyB2YWx1ZXMKICAgICAgICAgICAgdGhpcy50bXBWYWx1ZS5mcm9tID0gcGFydHM7CiAgICAgICAgICAgIHRoaXMudG1wVmFsdWUuaGFsZkZyb20gPSBoYWxmUGFydDsKICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICB9CiAgICAgICAgICBjYXNlICdyaWdodCc6IHsKICAgICAgICAgICAgLy8gY2hlY2sgYm91bmRzCiAgICAgICAgICAgIGxldCB0bXBWYWx1ZVRvID0gdmFsdWVUbyArIHBhcnRzICsgaGFsZlBhcnQ7CiAgICAgICAgICAgIGlmICh0bXBWYWx1ZVRvID4gdGhpcy5tYXgpIHsKICAgICAgICAgICAgICBwYXJ0cyA9IHRoaXMubWF4IC0gdmFsdWVUbzsKICAgICAgICAgICAgICBoYWxmUGFydCA9IDA7CiAgICAgICAgICAgIH0gZWxzZSBpZiAodG1wVmFsdWVUbyA8IHZhbHVlRnJvbSkgewogICAgICAgICAgICAgIHBhcnRzID0gdmFsdWVGcm9tIC0gdmFsdWVUbzsKICAgICAgICAgICAgICBoYWxmUGFydCA9IDA7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgLy8gc2V0IG5ldyB2YWx1ZXMKICAgICAgICAgICAgdGhpcy50bXBWYWx1ZS50byA9IHBhcnRzOwogICAgICAgICAgICB0aGlzLnRtcFZhbHVlLmhhbGZUbyA9IGhhbGZQYXJ0OwogICAgICAgICAgICBicmVhazsKICAgICAgICAgIH0KICAgICAgICAgIGNhc2UgJ3NsaWRlcic6IHsKICAgICAgICAgICAgLy8gY2hlY2sgYm91bmRzCiAgICAgICAgICAgIGxldCB0bXBWYWx1ZUZyb20gPSB2YWx1ZUZyb20gKyBwYXJ0cyArIGhhbGZQYXJ0OwogICAgICAgICAgICBsZXQgdG1wVmFsdWVUbyA9IHZhbHVlVG8gKyBwYXJ0cyArIGhhbGZQYXJ0OwogICAgICAgICAgICBpZiAodG1wVmFsdWVGcm9tIDwgdGhpcy5taW4pIHsKICAgICAgICAgICAgICBwYXJ0cyA9IHRoaXMubWluIC0gdmFsdWVGcm9tOwogICAgICAgICAgICAgIGhhbGZQYXJ0ID0gMDsKICAgICAgICAgICAgfSBlbHNlIGlmICh0bXBWYWx1ZVRvID4gdGhpcy5tYXgpIHsKICAgICAgICAgICAgICBwYXJ0cyA9IHRoaXMubWF4IC0gdmFsdWVUbzsKICAgICAgICAgICAgICBoYWxmUGFydCA9IDA7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgLy8gc2V0IG5ldyB2YWx1ZXMKICAgICAgICAgICAgdGhpcy50bXBWYWx1ZS5mcm9tID0gcGFydHM7CiAgICAgICAgICAgIHRoaXMudG1wVmFsdWUudG8gPSBwYXJ0czsKICAgICAgICAgICAgdGhpcy50bXBWYWx1ZS5oYWxmRnJvbSA9IGhhbGZQYXJ0OwogICAgICAgICAgICB0aGlzLnRtcFZhbHVlLmhhbGZUbyA9IGhhbGZQYXJ0OwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgICAvLyBlbWl0IGV2ZW50IHRoYXQgbW92ZWQgdmFsdWUgdXBkYXRlCiAgICAgICAgdGhpcy4kZW1pdCgndXBkYXRlJywgdGhpcy5nZXRWYWx1ZSgpKTsKICAgICAgfQogICAgfSwKICAgIG9uTW91c2VVcCAoKSB7CiAgICAgIC8vIGNoZWNrIGlzIHByZXZpb3VzbHkgbW91c2UgcHJlc3NlZCBkb3duCiAgICAgIGlmICghdGhpcy5pc01vdXNlRG93bikgcmV0dXJuOwogICAgICAvLyBmaW5hbCBoYW5kbGluZyBkYXRhCiAgICAgIHRoaXMudXBkYXRlVmFsdWUoKTsKICAgICAgaWYgKHRoaXMubW92ZWRJdGVtID09PSAnc2xpZGVyJykgewogICAgICAgIHRoaXMuJHJlZnMuc2xpZGVyLmNsYXNzTGlzdC5yZW1vdmUoJ3NsaWRlci0tZ3JhYmJpbmcnKTsKICAgICAgfQogICAgICB0aGlzLnJlc2V0RGF0YSgpOwogICAgfSwKICAgIHVwZGF0ZVZhbHVlICgpIHsKICAgICAgLy8gcmVjYWxjdWxhdGUgbmV3IHZhbHVlCiAgICAgIGxldCBwcmV2VmFsdWVGcm9tID0gTnVtYmVyKHRoaXMudmFsdWUuZnJvbSk7CiAgICAgIGxldCBwcmV2VmFsdWVUbyA9IE51bWJlcih0aGlzLnZhbHVlLnRvKTsKICAgICAgdGhpcy52YWx1ZS5mcm9tID0gcHJldlZhbHVlRnJvbSArIHRoaXMudG1wVmFsdWUuZnJvbSArIHRoaXMudG1wVmFsdWUuaGFsZkZyb207CiAgICAgIHRoaXMudmFsdWUudG8gPSBwcmV2VmFsdWVUbyArIHRoaXMudG1wVmFsdWUudG8gKyB0aGlzLnRtcFZhbHVlLmhhbGZUbzsKICAgICAgaWYgKHByZXZWYWx1ZUZyb20gIT09IHRoaXMudmFsdWUuZnJvbSB8fCBwcmV2VmFsdWVUbyAhPT0gdGhpcy52YWx1ZS50bykgewogICAgICAgIC8vIGVtaXQgZXZlbnQgdG8gdXBkYXRlIHYtbW9kZWwKICAgICAgICB0aGlzLiRlbWl0KCdpbnB1dCcsIHRoaXMudmFsdWUpOwogICAgICB9CiAgICB9LAogICAgcmVzZXREYXRhICgpIHsKICAgICAgdGhpcy50bXBWYWx1ZS5mcm9tID0gMDsKICAgICAgdGhpcy50bXBWYWx1ZS5oYWxmRnJvbSA9IDA7CiAgICAgIHRoaXMudG1wVmFsdWUudG8gPSAwOwogICAgICB0aGlzLnRtcFZhbHVlLmhhbGZUbyA9IDA7CiAgICAgIHRoaXMubW92ZWRJdGVtID0gbnVsbDsKICAgICAgdGhpcy5pc01vdXNlRG93biA9IGZhbHNlOwogICAgfQogIH0KfQo="},{"version":3,"sources":["VueDoubleRange.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAifile":"VueDoubleRange.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"container\" ref=\"container\">\n    <div class=\"slider\" name=\"slider\"\n         ref=\"slider\"\n         :style=\"{ left: inner.left + 'px', width: inner.width + 'px' }\"\n         @mousedown=\"onMouseDown\">\n      <div class=\"zoom-char zoom-char--left\" name=\"left\"\n           ref=\"left\"\n           @mousedown=\"onMouseDown\"></div>\n      <div class=\"zoom-char zoom-char--right\" name=\"right\"\n           ref=\"right\"\n           @mousedown=\"onMouseDown\"></div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'VueDoubleRange',\n  props: {\n    value: Object,\n    min: Number,\n    max: Number,\n    step: Number\n  },\n  data () {\n    return {\n      isMouseDown: false,\n      movedItem: null,\n      tmpValue: {\n        from: 0,\n        halfFrom: 0,\n        to: 0,\n        halfTo: 0\n      },\n      width: {\n        container: 0,\n        step: 0,\n        halfStep: 0\n      },\n      mouse: {\n        startX: 0\n      }\n    }\n  },\n  mounted () {\n    // check available slider bounded\n    if (this.step <= 0) {\n      this.step = 1;\n    }\n    let value = this.value;\n    if (value.from < this.min) {\n      this.$emit('input', { from: this.min, to: value.to });\n    }\n    if (value.to > this.max) {\n      this.$emit('input', { from: value.from, to: this.max });\n    }\n    if (value.from > value.to) {\n      this.$emit('input', { from: this.min, to: this.max });\n    }\n    // add events\n    window.addEventListener('resize', this.onWindowResize);\n    document.addEventListener('mouseup', this.onMouseUp);\n    document.addEventListener('mousemove', this.onMouseMove);\n    // init width data\n    this.onWindowResize();\n  },\n  beforeDestroy () {\n    // remove added events\n    window.removeEventListener('resize', this.onWindowResize);\n    document.removeEventListener('mouseup', this.onMouseUp);\n    document.removeEventListener('mousemove', this.onMouseMove);\n  },\n  computed: {\n    inner () {\n      let { from, to } = this.getValue();\n      let left = this.width.step * ((from - this.min) / this.step);\n      let width = (this.width.step * ((to - this.min) / this.step)) - left;\n      return {\n        left,\n        width\n      };\n    }\n  },\n  methods: {\n    getValue () {\n      return {\n        from: (Number(this.value.from) + this.tmpValue.from + this.tmpValue.halfFrom) || this.min,\n        to: (Number(this.value.to) + this.tmpValue.to + this.tmpValue.halfTo) || this.max\n      }\n    },\n    onWindowResize () {\n      this.width.container = this.$refs.container.offsetWidth;\n      this.width.step = (this.width.container / (this.max - this.min)) * this.step;\n      this.width.halfStep = this.width.step / 2;\n    },\n    onMouseDown (event) {\n      // check is previously mouse not pressed down\n      if (this.isMouseDown) return;\n      // get info from new mouse down event\n      this.movedItem = event.target.getAttribute('name');\n      this.mouse.startX = event.clientX;\n      switch (this.movedItem) {\n        case 'slider':\n          this.$refs.slider.classList.add('slider--grabbing');\n          break;\n        case 'left':\n          this.$refs.right.style.zIndex = 1;\n          this.$refs.left.style.zIndex = 2;\n          break;\n        case 'right':\n          this.$refs.left.style.zIndex = 1;\n          this.$refs.right.style.zIndex = 2;\n          break;\n      }\n      this.isMouseDown = true;\n    },\n    onMouseMove (event) {\n      // check is previously mouse pressed down\n      if (this.isMouseDown) {\n        let clientX = event.clientX;\n        let delta = this.mouse.startX - clientX;\n        // get new value parts from delta\n        let parts, halfPart;\n        if (delta > 0) {\n          parts = Math.floor(delta / this.width.step);\n          halfPart = Math.floor((delta - (parts * this.width.step)) / this.width.halfStep);\n          parts = -(parts * this.step);\n          halfPart = -(halfPart * this.step);\n        } else {\n          delta = -delta;\n          parts = Math.floor(delta / this.width.step);\n          halfPart = Math.floor((delta - (parts * this.width.step)) / this.width.halfStep);\n          parts = parts * this.step;\n          halfPart = halfPart * this.step;\n        }\n        let valueFrom = Number(this.value.from);\n        let valueTo = Number(this.value.to);\n        switch (this.movedItem) {\n          case 'left': {\n            // check bounds\n            let tmpValueFrom = valueFrom + parts + halfPart;\n            if (tmpValueFrom < this.min) {\n              parts = this.min - valueFrom;\n              halfPart = 0;\n            } else if (tmpValueFrom > valueTo) {\n              parts = valueTo - valueFrom;\n              halfPart = 0;\n            }\n            // set new values\n            this.tmpValue.from = parts;\n            this.tmpValue.halfFrom = halfPart;\n            break;\n          }\n          case 'right': {\n            // check bounds\n            let tmpValueTo = valueTo + parts + halfPart;\n            if (tmpValueTo > this.max) {\n              parts = this.max - valueTo;\n              halfPart = 0;\n            } else if (tmpValueTo < valueFrom) {\n              parts = valueFrom - valueTo;\n              halfPart = 0;\n            }\n            // set new values\n            this.tmpValue.to = parts;\n            this.tmpValue.halfTo = halfPart;\n            break;\n          }\n          case 'slider': {\n            // check bounds\n            let tmpValueFrom = valueFrom + parts + halfPart;\n            let tmpValueTo = valueTo + parts + halfPart;\n            if (tmpValueFrom < this.min) {\n              parts = this.min - valueFrom;\n              halfPart = 0;\n            } else if (tmpValueTo > this.max) {\n              parts = this.max - valueTo;\n              halfPart = 0;\n            }\n            // set new values\n            this.tmpValue.from = parts;\n            this.tmpValue.to = parts;\n            this.tmpValue.halfFrom = halfPart;\n            this.tmpValue.halfTo = halfPart;\n          }\n        }\n        // emit event that moved value update\n        this.$emit('update', this.getValue());\n      }\n    },\n    onMouseUp () {\n      // check is previously mouse pressed down\n      if (!this.isMouseDown) return;\n      // final handling data\n      this.updateValue();\n      if (this.movedItem === 'slider') {\n        this.$refs.slider.classList.remove('slider--grabbing');\n      }\n      this.resetData();\n    },\n    updateValue () {\n      // recalculate new value\n      let prevValueFrom = Number(this.value.from);\n      let prevValueTo = Number(this.value.to);\n      this.value.from = prevValueFrom + this.tmpValue.from + this.tmpValue.halfFrom;\n      this.value.to = prevValueTo + this.tmpValue.to + this.tmpValue.halfTo;\n      if (prevValueFrom !== this.value.from || prevValueTo !== this.value.to) {\n        // emit event to update v-model\n        this.$emit('input', this.value);\n      }\n    },\n    resetData () {\n      this.tmpValue.from = 0;\n      this.tmpValue.halfFrom = 0;\n      this.tmpValue.to = 0;\n      this.tmpValue.halfTo = 0;\n      this.movedItem = null;\n      this.isMouseDown = false;\n    }\n  }\n}\n</script>\n\n<style scoped>\n  .container {\n    position: relative;\n    height: 20px;\n    background-color: #cecece;\n    border: 1px solid #9a9a9a;\n    margin: 10px 18px;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n  }\n  .slider {\n    cursor: -webkit-grab;\n    position: absolute;\n    height: 100%;\n    background-color: #00000080;\n  }\n  .slider--grabbing {\n    cursor: -webkit-grabbing;\n  }\n  .zoom-char {\n    /* background-image: url('../assets/vue-double-range/next.svg'); */\n    cursor: ew-resize;\n    position: absolute;\n    width: 35px;\n    height: 35px;\n    top: -8px;\n  }\n  .zoom-char--left {\n    background-image: url('../assets/vue-double-range/left.svg');\n    left: -18px;\n  }\n  .zoom-char--right {\n    /* background-image: url('../assets/vue-double-range/left.svg'); */\n    right: -18px;\n  }\n</style>"]}]}
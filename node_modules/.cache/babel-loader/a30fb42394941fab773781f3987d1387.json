{"remainingRequest":"/app/node_modules/babel-loader/lib/index.js!/app/node_modules/cache-loader/dist/cjs.js??ref--0-0!/app/node_modules/vue-loader/lib/index.js??vue-loader-options!/app/src/components/VueDoubleRange.vue?vue&type=script&lang=js&","dependencies":[{"path":"/app/src/components/VueDoubleRange.vue","mtime":1610372214876},{"path":"/app/node_modules/cache-loader/dist/cjs.js","mtime":1610126726712},{"path":"/app/node_modules/babel-loader/lib/index.js","mtime":1610126726664},{"path":"/app/node_modules/cache-loader/dist/cjs.js","mtime":1610126726712},{"path":"/app/node_modules/vue-loader/lib/index.js","mtime":1610126728456}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["VueDoubleRange.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"container\" ref=\"container\">\n    <div class=\"slider\" name=\"slider\"\n         ref=\"slider\"\n         :style=\"{ left: inner.left + 'px', width: inner.width + 'px' }\"\n         @mousedown=\"onMouseDown\">\n      <div class=\"zoom-char zoom-char--left\" name=\"left\"\n           ref=\"left\"\n           @mousedown=\"onMouseDown\"></div>\n      <div class=\"zoom-char zoom-char--right\" name=\"right\"\n           ref=\"right\"\n           @mousedown=\"onMouseDown\"></div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'VueDoubleRange',\n  props: {\n    value: Object,\n    min: Number,\n    max: Number,\n    step: Number\n  },\n  data () {\n    return {\n      isMouseDown: false,\n      movedItem: null,\n      tmpValue: {\n        from: 0,\n        halfFrom: 0,\n        to: 0,\n        halfTo: 0\n      },\n      width: {\n        container: 0,\n        step: 0,\n        halfStep: 0\n      },\n      mouse: {\n        startX: 0\n      }\n    }\n  },\n  mounted () {\n    // check available slider bounded\n    if (this.step <= 0) {\n      this.step = 1;\n    }\n    let value = this.value;\n    if (value.from < this.min) {\n      this.$emit('input', { from: this.min, to: value.to });\n    }\n    if (value.to > this.max) {\n      this.$emit('input', { from: value.from, to: this.max });\n    }\n    if (value.from > value.to) {\n      this.$emit('input', { from: this.min, to: this.max });\n    }\n    // add events\n    window.addEventListener('resize', this.onWindowResize);\n    document.addEventListener('mouseup', this.onMouseUp);\n    document.addEventListener('mousemove', this.onMouseMove);\n    // init width data\n    this.onWindowResize();\n  },\n  beforeDestroy () {\n    // remove added events\n    window.removeEventListener('resize', this.onWindowResize);\n    document.removeEventListener('mouseup', this.onMouseUp);\n    document.removeEventListener('mousemove', this.onMouseMove);\n  },\n  computed: {\n    inner () {\n      let { from, to } = this.getValue();\n      let left = this.width.step * ((from - this.min) / this.step);\n      let width = (this.width.step * ((to - this.min) / this.step)) - left;\n      return {\n        left,\n        width\n      };\n    }\n  },\n  methods: {\n    getValue () {\n      return {\n        from: (Number(this.value.from) + this.tmpValue.from + this.tmpValue.halfFrom) || this.min,\n        to: (Number(this.value.to) + this.tmpValue.to + this.tmpValue.halfTo) || this.max\n      }\n    },\n    onWindowResize () {\n      this.width.container = this.$refs.container.offsetWidth;\n      this.width.step = (this.width.container / (this.max - this.min)) * this.step;\n      this.width.halfStep = this.width.step / 2;\n    },\n    onMouseDown (event) {\n      // check is previously mouse not pressed down\n      if (this.isMouseDown) return;\n      // get info from new mouse down event\n      this.movedItem = event.target.getAttribute('name');\n      this.mouse.startX = event.clientX;\n      switch (this.movedItem) {\n        case 'slider':\n          this.$refs.slider.classList.add('slider--grabbing');\n          break;\n        case 'left':\n          this.$refs.right.style.zIndex = 1;\n          this.$refs.left.style.zIndex = 2;\n          break;\n        case 'right':\n          this.$refs.left.style.zIndex = 1;\n          this.$refs.right.style.zIndex = 2;\n          break;\n      }\n      this.isMouseDown = true;\n    },\n    onMouseMove (event) {\n      // check is previously mouse pressed down\n      if (this.isMouseDown) {\n        let clientX = event.clientX;\n        let delta = this.mouse.startX - clientX;\n        // get new value parts from delta\n        let parts, halfPart;\n        if (delta > 0) {\n          parts = Math.floor(delta / this.width.step);\n          halfPart = Math.floor((delta - (parts * this.width.step)) / this.width.halfStep);\n          parts = -(parts * this.step);\n          halfPart = -(halfPart * this.step);\n        } else {\n          delta = -delta;\n          parts = Math.floor(delta / this.width.step);\n          halfPart = Math.floor((delta - (parts * this.width.step)) / this.width.halfStep);\n          parts = parts * this.step;\n          halfPart = halfPart * this.step;\n        }\n        let valueFrom = Number(this.value.from);\n        let valueTo = Number(this.value.to);\n        switch (this.movedItem) {\n          case 'left': {\n            // check bounds\n            let tmpValueFrom = valueFrom + parts + halfPart;\n            if (tmpValueFrom < this.min) {\n              parts = this.min - valueFrom;\n              halfPart = 0;\n            } else if (tmpValueFrom > valueTo) {\n              parts = valueTo - valueFrom;\n              halfPart = 0;\n            }\n            // set new values\n            this.tmpValue.from = parts;\n            this.tmpValue.halfFrom = halfPart;\n            break;\n          }\n          case 'right': {\n            // check bounds\n            let tmpValueTo = valueTo + parts + halfPart;\n            if (tmpValueTo > this.max) {\n              parts = this.max - valueTo;\n              halfPart = 0;\n            } else if (tmpValueTo < valueFrom) {\n              parts = valueFrom - valueTo;\n              halfPart = 0;\n            }\n            // set new values\n            this.tmpValue.to = parts;\n            this.tmpValue.halfTo = halfPart;\n            break;\n          }\n          case 'slider': {\n            // check bounds\n            let tmpValueFrom = valueFrom + parts + halfPart;\n            let tmpValueTo = valueTo + parts + halfPart;\n            if (tmpValueFrom < this.min) {\n              parts = this.min - valueFrom;\n              halfPart = 0;\n            } else if (tmpValueTo > this.max) {\n              parts = this.max - valueTo;\n              halfPart = 0;\n            }\n            // set new values\n            this.tmpValue.from = parts;\n            this.tmpValue.to = parts;\n            this.tmpValue.halfFrom = halfPart;\n            this.tmpValue.halfTo = halfPart;\n          }\n        }\n        // emit event that moved value update\n        this.$emit('update', this.getValue());\n      }\n    },\n    onMouseUp () {\n      // check is previously mouse pressed down\n      if (!this.isMouseDown) return;\n      // final handling data\n      this.updateValue();\n      if (this.movedItem === 'slider') {\n        this.$refs.slider.classList.remove('slider--grabbing');\n      }\n      this.resetData();\n    },\n    updateValue () {\n      // recalculate new value\n      let prevValueFrom = Number(this.value.from);\n      let prevValueTo = Number(this.value.to);\n      this.value.from = prevValueFrom + this.tmpValue.from + this.tmpValue.halfFrom;\n      this.value.to = prevValueTo + this.tmpValue.to + this.tmpValue.halfTo;\n      if (prevValueFrom !== this.value.from || prevValueTo !== this.value.to) {\n        // emit event to update v-model\n        this.$emit('input', this.value);\n      }\n    },\n    resetData () {\n      this.tmpValue.from = 0;\n      this.tmpValue.halfFrom = 0;\n      this.tmpValue.to = 0;\n      this.tmpValue.halfTo = 0;\n      this.movedItem = null;\n      this.isMouseDown = false;\n    }\n  }\n}\n</script>\n\n<style scoped>\n  .container {\n    position: relative;\n    height: 20px;\n    background-color: #cecece;\n    border: 1px solid #9a9a9a;\n    margin: 10px 18px;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n  }\n  .slider {\n    cursor: -webkit-grab;\n    position: absolute;\n    height: 100%;\n    background-color: #00000080;\n  }\n  .slider--grabbing {\n    cursor: -webkit-grabbing;\n  }\n  .zoom-char {\n    /* background-image: url('../assets/vue-double-range/next.svg'); */\n    cursor: ew-resize;\n    position: absolute;\n    width: 35px;\n    height: 35px;\n    top: -8px;\n  }\n  .zoom-char--left {\n    background-image: url('../assets/vue-double-range/left.svg');\n    left: -18px;\n  }\n  .zoom-char--right {\n    /* background-image: url('../assets/vue-double-range/left.svg'); */\n    right: -18px;\n  }\n</style>"],"sourceRoot":"src/components"}]}